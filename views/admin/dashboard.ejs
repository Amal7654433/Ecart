<%- include("../partials/adminSidebar.ejs")%>
    <!-- <style>
       
       
        .heading {
                display: flex;
                justify-content: center;
           font-size: 30px;
                height: 60px;
                width: 100%;
                margin-top:40px;
                
            } 
    </style>
 <div class="heading">Overview</div> -->
    <style>
        .card2 {
            background-color: #fff;
            border-radius: 10px;
            border: none;
            position: relative;
            margin-bottom: 30px;
            box-shadow: 0 0.46875rem 2.1875rem rgba(90, 97, 105, 0.1), 0 0.9375rem 1.40625rem rgba(90, 97, 105, 0.1), 0 0.25rem 0.53125rem rgba(90, 97, 105, 0.12), 0 0.125rem 0.1875rem rgba(90, 97, 105, 0.1);
        }

        .l-bg-cherry {
            background: linear-gradient(to right, #493240, #f09) !important;
            color: #fff;
        }

        .l-bg-blue-dark {
            background: linear-gradient(to right, #373b44, #4286f4) !important;
            color: #fff;
        }

        .l-bg-green-dark {
            background: linear-gradient(to right, #0a504a, #38ef7d) !important;
            color: #fff;
        }

        .l-bg-orange-dark {
            background: linear-gradient(to right, #a86008, #ffba56) !important;
            color: #fff;
        }

        .card2 .card-statistic-3 .card-icon-large .fas,
        .card .card-statistic-3 .card-icon-large .far,
        .card .card-statistic-3 .card-icon-large .fab,
        .card .card-statistic-3 .card-icon-large .fal {
            font-size: 80px;
        }

        .card2 .card-statistic-3 .card-icon {
            text-align: center;
            line-height: 50px;
            margin-left: 15px;
            color: #000;
            position: absolute;
            right: 10px;
            top: 40px;
            opacity: 0.1;
        }

        #ellipse {
            overflow: hidden;
            white-space: nowrap;
            text-overflow: ellipsis;


        }

        .chartCard {



            display: flex;
            align-items: center;
            justify-content: center;
        }

        .chartBox {
            width: fit-content;
            padding: 20px;
            border-radius: 20px;
            border: solid 3px rgba(54, 162, 235, 1);
            background: white;
        }
    </style>


    <div class="container ">
        <h3 class="fw-bold  pt-1">Hai Admin Welcome <span class="text-danger">Back</span></h3>
        <div class="d-flex justify-content-between align-items-center mb-5 ">
            <h1 class="fw-bold mb-0 text-black">Sales overview</h1>
            <a href="/admin/dashboard/report" style="text-decoration: none " class=" badge badge-primary float-end">
                <h6 class="mt-1">
                    <i class="fa fa-download"></i>
                    Download Report
                </h6>
            </a>
        </div>
        <div class="row d-flex justify-content-center align-items-center h-100 mt-3">
            <div class="col-12 border-0">
                <div class="col-md-12">
                    <div class="row">
                        <div class="col-xl-3 col-lg-6">
                            <div class="card2 l-bg-cherry">
                                <div class="card-statistic-3 p-3">
                                    <div class="card-icon card-icon-large"><i class="fas fa-shopping-cart"></i>
                                    </div>
                                    <div class="mb-4">
                                        <h5 class="card-title mb-0">Orders</h5>
                                    </div>
                                    <div class="row align-items-center mb-2 d-flex">
                                        <div class="col-8">
                                            <h2 class="d-flex align-items-center mb-0">
                                                <%= orderCount %>
                                            </h2>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-xl-3 col-lg-6">
                            <div class="card2 l-bg-blue-dark">
                                <div class="card-statistic-3 p-3">
                                    <div class="card-icon card-icon-large"><i class="fas fa-users"></i>
                                    </div>
                                    <div class="mb-4">
                                        <h5 class="card-title mb-0">Customers</h5>
                                    </div>
                                    <div class="row align-items-center mb-2 d-flex">
                                        <div class="col-8">
                                            <h2 class="d-flex align-items-center mb-0">
                                                <%= userCount %>
                                            </h2>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-xl-3 col-lg-6">
                            <div class="card2 l-bg-green-dark">
                                <div class="card-statistic-3 p-3">
                                    <div class="card-icon card-icon-large"><i class="fas fa-ticket-alt"></i>
                                    </div>
                                    <div class="mb-4">
                                        <h5 class="card-title mb-0">Sold Products</h5>
                                    </div>
                                    <div class="row align-items-center mb-2 d-flex">
                                        <div class="col-8">
                                            <h2 class="d-flex align-items-center mb-0">
                                                <%= totalQuantity %>
                                            </h2>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-xl-3 col-lg-6">
                            <div class="card2 l-bg-orange-dark">
                                <div class="card-statistic-3 p-3 ">
                                    <div class="card-icon card-icon-large  "><i class="fas fa-dollar-sign"></i>
                                    </div>
                                    <div class="mb-4">
                                        <h5 class="card-title mb-0">Total Revenue</h5>
                                    </div>
                                    <div class="row align-items-center mb-2 d-flex" id="ellipse">
                                        <div class="col-8 " id="">
                                            <h2 class="d-flex align-items-center mb-0" title="₹<%= totalBill %>">₹
                                                <%= totalBill %>
                                            </h2>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div>


                    <div class="row g-0">
                        <div class="col-lg-8">
                            <div class="">


                                <label for="timePeriod">Select Time Period:</label>
                                <select class="light-bg" id="timeFilter" onchange="updateChart()">
                                    <option value="monthly">Monthly</option>
                                    <option value="weekly">weekly</option>
                                    <option value="yearly">Yearly</option>
                                </select>
                          
                                <div class="chartCard mb-4 d-flex justify-content-between align-items-center">
                                    
                                    <div class="chartBox">

                                        <input type="hidden" id="monthlySalesData"
                                            value='<%= JSON.stringify(monthlySalesData) %>'>
                                        <canvas id="salesChart" height="300" width="650"></canvas>
                                    </div>
                                </div>
                                <hr class="my-4">
                            </div>
                        </div>
                        <!-- <div class="col-lg-4 bg-grey">
                                <div class="p-5">
                                    <h3 class="fw-bold mb-5 mt-2 pt-1">Other Reports</h3>
                                    <hr class="my-4 mb-5">
                                    <div class="d-flex justify-content-between mb-4">
                                        <h5 class="text-uppercase" style="font-weight: 700">Payment modes</h5>
                                        <h5 id="totalSales" style="font-weight: 700"></h5>
                                    </div>
                                    <div class="container">
                                        <canvas id="paymentModeChart"></canvas>
                                    </div>
                                    <input type="hidden" id="fordata" value="<%=data%>">
                                </div>
                            </div> -->
                    </div>


                </div>

            </div>
        </div>
    </div>


    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js/dist/chart.min.js"></script>
    <script
        src="https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns/dist/chartjs-adapter-date-fns.bundle.min.js"></script>

    <script>
        const monthlySalesDataInput = document.getElementById('monthlySalesData');
        const monthlySalesData = JSON.parse(monthlySalesDataInput.value);
        const months = monthlySalesData.map(item => item.month);
        const salesData = monthlySalesData.map(item => item.totalSales);
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {

            const monthlySalesDataInput = document.getElementById('monthlySalesData');
            const monthlySalesData = JSON.parse(monthlySalesDataInput.value);
            const months = monthlySalesData.map(item => item.month);
            const salesData = monthlySalesData.map(item => item.totalSales);

            const monthNames = months.map(month => {
                const date = new Date(month);
                return date.toLocaleString('default', { month: 'long' });
            });

            const ctx = document.getElementById('salesChart').getContext('2d');

            // Initialize the salesChart inside the DOMContentLoaded event
            const salesChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: monthNames,
                    datasets: [{
                        label: 'Sales',
                        data: salesData,
                        // backgroundColor: 'rgba(75, 192, 192, 0.8)',
                        // borderColor: 'rgba(75, 192, 192, 1)',
                        // borderWidth: 3,
                        backgroundColor: [
                            'rgba(255, 26, 104, 0.2)',
                            'rgba(54, 162, 235, 0.2)',
                            'rgba(255, 206, 86, 0.2)',
                            'rgba(75, 192, 192, 0.2)',
                            'rgba(153, 102, 255, 0.2)',
                            'rgba(255, 159, 64, 0.2)',
                            'rgba(0, 0, 0, 0.2)'
                        ],
                        borderColor: [
                            'rgba(255, 26, 104, 1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)',
                            'rgba(255, 159, 64, 1)',
                            'rgba(0, 0, 0, 1)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: false,
                    scales: {
                        x: {
                            beginAtZero: true,
                        },
                        y: {
                            beginAtZero: true,
                        }
                    }
                }
            });

            // Add event listener for dropdown menu change
            const timeFilterSelect = document.getElementById('timeFilter');
            timeFilterSelect.addEventListener('change', updateChart());

            // Store salesChart as a property of the window object
            window.salesChart = salesChart;

            // Initial call to updateChart function
            updateChart();
        });
    </script>
    <script>
        console.log('hello up')
        async function updateChart() {
            try {
                console.log('update chart');
                const timeFilterSelect = document.getElementById('timeFilter');
                const selectedFilter = timeFilterSelect.value;

                // Fetch data based on the selected filter
                const newData = await fetchDataBasedOnFilter(selectedFilter);

                if (!window.salesChart || !window.salesChart.options || !window.salesChart.options.scales || !window.salesChart.options.scales.x) {
                    console.error('Chart or its options are not properly initialized:', window.salesChart);
                    return;
                }

                // Update the chart with the new data
                if (selectedFilter === 'monthly') {
                    window.salesChart.data.labels = newData.monthNames.map(month => new Date(month).toLocaleString('default', { month: 'long', year: 'numeric' }));
                    window.salesChart.data.datasets[0].label = "Monthly Sales";
                    window.salesChart.options.scales.x.data = newData.monthNames;
                } else if (selectedFilter === 'weekly') {
                    window.salesChart.data.labels = newData.weeks.map(week => {
                        const [year, weekNumber] = week.split('-');
                        const startDate = getStartDateOfWeek(year, weekNumber);
                        return `${startDate.toLocaleString('default', { month: 'short', day: 'numeric' })} `;
                    });
                    window.salesChart.data.datasets[0].label = "Weekly Sales";
                    window.salesChart.options.scales.x.data = newData.weeks;
                } else if (selectedFilter === 'yearly') {
                    window.salesChart.data.labels = newData.years.map(year => new Date(year + '-01-01').toLocaleString('default', { year: 'numeric' }));
                    window.salesChart.data.datasets[0].label = "Yearly Sales";
                    window.salesChart.options.scales.x.data = newData.years;
                }

                window.salesChart.data.datasets[0].data = newData.salesData;
                window.salesChart.update();
            } catch (error) {
                console.error('Error updating chart:', error);
            }
        }

    </script>
    <script>
        async function fetchDataBasedOnFilter(filter) {
            try {
                const response = await fetch(`/admin/chart?filter=${filter}`);
                if (!response.ok) {
                    throw new Error(`HTTP error! Status: ${response.status}`);
                }
                const data = await response.json();
                console.log(data);
                return {
                    monthNames: data.monthNames,
                    weeks: data.weeks,
                    years: data.years,
                    salesData: data.salesData,
                };
            } catch (error) {
                console.error('Error fetching data:', error);
                return {
                    monthNames: [],
                    weeks: [],
                    years: [],
                    salesData: [],
                };
            }
        }
    </script>


    <script>

        function getStartDateOfWeek(year, weekNumber) {
            const date = new Date(year, 0, 1); // January 1st of the year
            const daysToAdd = (weekNumber - 1) * 7;
            date.setDate(date.getDate() + daysToAdd - date.getDay()); // Set to the first day of the week
            return date;
        }</script>

    <!-- <script>

        
        const data = {
            labels: [],
            datasets: [{
                label: 'revenue',
                data: [],
                backgroundColor: [
                    'rgba(255, 26, 104, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(255, 159, 64, 0.2)',
                    'rgba(0, 0, 0, 0.2)'
                ],
                borderColor: [
                    'rgba(255, 26, 104, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)',
                    'rgba(0, 0, 0, 1)'
                ],
                borderWidth: 1
            }]
        };

    
        const config = {
            type: 'bar',
            data,
            options: {
                scales: {
                    x: {
                        min: '2023-01-01',
                        max: '2023-12-31',
                        type: "time",
                        time: {
                            unit: 'day'
                        }
                    },
                    y: {
                        beginAtZero: true
                    }
                }
            }
        };

        const myChart = new Chart(
            document.getElementById('myChart'),
            config
        );
        function filterChart(date) {

            const year = date.value.substring(0, 4)
            const month = date.value.substring(5, 7)
            const lastDay = (y, m) => {
                return new Date(y, m, 0).getDate()
            }
            lastDay(year, month)
            const startDate = `${date.value}-01`
            const endDate = `${date.value}-${lastDay(year, month)}`
            myChart.config.options.scales.x.min = startDate
            myChart.config.options.scales.x.max = endDate

            myChart.update()
        }
        function reset() {
            myChart.config.options.scales.x.min = '2023-01-01'
            myChart.config.options.scales.x.max = '2023-12-30'
            myChart.update()
        }

    </script> -->



    <%- include("../partials/adminFooter.ejs") %>